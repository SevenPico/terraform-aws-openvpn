---
schemaVersion: '2.2'
description: Restore an SQLite OpenVPN EC2 instance with a backup stored in S3.
parameters:
  S3BUCKET:
    description: The S3 Bucket where the backup is.
    type: String
    default: "${s3_bucket}"
  S3BACKUPKEY:
    description: The S3 Object Key of the BackUp GZ file.
    type: String
    default: "${s3_backup_key}"
  BACKUPVERSIONID:
    description: The ID of the S3 Object Version.
    type: String
    default: "${backup_version_id}"
mainSteps:
  - action: aws:runShellScript
    name: VpnBackupRestore
    inputs:
      timeoutSeconds: '3600'
      runCommand:
        - |
          #!/bin/bash
          OPENVPNAS_SERVICE=openvpnas
          OPENVPNAS_DIR=/usr/local/openvpn_as
          OPENVPNAS_BACKUP_DIR=$OPENVPNAS_DIR/tmp-backup-restore
          service openvpnas stop
          mkdir -p $OPENVPNAS_BACKUP_DIR
          cd $OPENVPNAS_BACKUP_DIR
          BASENAME=`basename {{S3BACKUPKEY}}`
          echo "Retrieving {{S3BACKUPKEY}} from {{S3BUCKET}}."
          aws s3api get-object --bucket {{S3BUCKET}} --key {{S3BACKUPKEY}} --region ${region} --version-id {{BACKUPVERSIONID}} $BASENAME
          tar -xf $BASENAME
          cd ./etc/db
          DB_FILES='*.db'
          for f in $DB_FILES
          do
          rm -f $OPENVPNAS_DIR/etc/db/$f
          echo "Restoring $f."
          sqlite3 <$OPENVPNAS_BACKUP_DIR/etc/db/$f $OPENVPNAS_DIR/etc/db/$f
          done
          rm -f $OPENVPNAS_DIR/etc/as.conf
          echo "Restoring $OPENVPNAS_DIR/etc/as.conf."
          cp $OPENVPNAS_BACKUP_DIR/etc/as.conf $OPENVPNAS_DIR/etc/as.conf
          cd $OPENVPNAS_DIR
          rm -Rf $OPENVPNAS_DIR/tmp-backup-restore
          service openvpnas start
